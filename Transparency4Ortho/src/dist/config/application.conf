
# XPTools Interface config
xptools {
  bin-folder: "bin/xptools"
  tmp-folder: "tmp/"
  executables: {
    dsftool: ["DSFTool.exe", "DSFTool"]
    ddstool: ["DDSTool.exe", "DDSTool"]
    all: ${xptools.executables.dsftool} ${xptools.executables.ddstool}
  }
  autodownload {
    url {
      win: "http://dev.x-plane.com/download/tools/xptools_win_15-3.zip"
      mac: "http://dev.x-plane.com/download/tools/xptools_mac_15-3.zip"
      linux: "http://dev.x-plane.com/download/tools/xptools_lin_15-3.zip"
    }
  }
}

# Library generator config
libgen {
  library {
    prefix: "Transparency4Ortho"
    folder: "Custom Scenery/Transparency4Ortho"
    definition-file: ${libgen.library.folder}"/library.txt"
  }
  resources {
    roads {
      source: "Resources/default scenery/1000 roads"
      target: ${libgen.library.folder}"/Resources/1000_roads"
      exports: ["roads.net", "roads_EU.net"]
      duplication.ignore-files: [${libgen.resources.roads.source}"/library.txt", ${libgen.resources.roads.source}"/library.lib"]
    }
  }
}

overlay-scanner {
  library-prefix: ${libgen.library.prefix}
  backup-folder: "Transparency4Ortho/Backups"
  regex {
    scenery-pack-entry: "SCENERY_PACK\\s+(?<scenerypath>.+)"
    dsf-filename: "\\A[-+]\\d{2}[-+]\\d{3}[.]dsf\\Z"
    ortho-dds-filename: "\\A\\d{5,6}_\\d{5,6}_.+[.]dds\\Z"
  }
  replacements {
    roads-net {
      pattern: "(?<before>NETWORK_DEF\\s+)(?<replace>lib/g10)(?<after>/roads.net)"
    }
    roads_EU-net {
      pattern: "(?<before>NETWORK_DEF\\s+)(?<replace>lib/g10)(?<after>/roads_EU.net)"
    }
  }
}
