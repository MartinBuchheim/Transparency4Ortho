general {
  github-url: "https://github.com/melb00m/Transparency4Ortho"
}

libgen {
  library {
    folder: "Custom Scenery/Transparency4Ortho"
    definition-file: ${libgen.library.folder}"/library.txt"
  }

  generation {
    library-prefix: "lib/g10"
    library-header: ["A", "800", "LIBRARY", ""]
    export-directive: "EXPORT_EXCLUDE %s/%s %s"
    region-name = "Transparency4Ortho"
    region-rect-regex = "REGION_RECT\\s+[+-]?\\d{3} [+-]?\\d{2} [+-]?\\d{2} [+-]?\\d{2}"
    region-rect-format = "REGION_RECT %1$+04d %2$+03d %1$+04d %2$+03d"
    region-define-format = "REGION_DEFINE %s"
    region-use-format = "REGION %s"
  }

  resources {
    roads {
      source: "Resources/default scenery/1000 roads"
      checksum {
        "roads.net": [ "26DE595D16A3DCD0EC5557C87A4A1E49" ]
        "roads_EU.net": [ "69752D15736B04B892A63773928C4758" ]
      }
      target: ${libgen.library.folder}"/Resources/1000_roads"
      exports: ["roads.net", "roads_EU.net"]
      duplication.ignore-files: [${libgen.resources.roads.source}"/library.txt", ${libgen.resources.roads.source}"/library.lib"]
    }
  }

  modifications {
    roads {
      uncomment {
        groups-regex: "(#\\s+Group:\\s+)(?<groupName>\\w+)"
        groups-enabled: ["GRPLocal", "GRPLocalOneWay", "GRPPrimary", "GRPPrimaryOneWay", "GRPSecondary", "GRPSecondaryOneWa", "GRPSingleLane", "GRPSingleLaneOneway", "GRP_PlugsPri", "GRP_PlugsSec", "GRP_PlugsLoc", "GRP_PlugsRural", "GRP_JuncComp_EU", "GRP_JuncPlugs_EU", "GRPCompJunctionsDrp", "GRP_TransitionBYTs", "GRP_Centers", "GRP_Corners", "GRP_Stubs", "GRP_DeadEnds", "GRP_Approaches"]
        target-files: [${libgen.resources.roads.target}"/roads.net", ${libgen.resources.roads.target}"/roads_EU.net"]
        lines-starting-with: ["QUAD", "TRI", "SEGMENT_DRAPED"]
      }
    }
  }
}

overlay-scanner {
  backup-folder: "Transparency4Ortho/Backups"
  earth-nav-data-folder: "Earth nav data"
  scenery-packs-file: "Custom Scenery/scenery_packs.ini"

  tiles {
    input-pattern: "(?<lat>[+-]\\d{1,2})(?<lon>[+-]\\d{1,3})"
  }
  regex {
    scenery-pack-entry: "SCENERY_PACK\\s+(?<scenerypath>.+)"
    dsf-filename: "\\A[-+]\\d{2}[-+]\\d{3}[.]dsf\\Z"
  }
  detection {
    orthos {
      dds-filename-regex: "\\A\\d{5,6}_\\d{5,6}_.+[.]dds\\Z"
      folder-names-regex: ["zOrtho4XP_.+", "zPhotoXP_.+"]
      excluder-files: ["Transparency4Ortho.Exclude", "library.txt", ${overlay-scanner.earth-nav-data-folder}"/apt.dat"]
      includer-files: ["Transparency4Ortho.Include", "Ortho4XP.cfg"]
    }
  }
}
