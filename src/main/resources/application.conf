# General stuff
general {
  github-url: "https://github.com/melb00m/Transparency4Ortho"
}

# XPTools Interface config
xptools {
  bin-folder: "bin/xptools"
  tmp-folder: "tmp/"
  executables: {
    dsftool: ["DSFTool.exe", "DSFTool"]
    ddstool: ["DDSTool.exe", "DDSTool"]
    all: ${xptools.executables.dsftool} ${xptools.executables.ddstool}
  }
  autodownload {
    url {
      win: "http://dev.x-plane.com/download/tools/xptools_win_15-3.zip"
      mac: "http://dev.x-plane.com/download/tools/xptools_mac_15-3.zip"
      linux: "http://dev.x-plane.com/download/tools/xptools_lin_15-3.zip"
    }
  }
}

# Library generator config
libgen {
  library {
    prefix: "Transparency4Ortho"
    folder: "Custom Scenery/Transparency4Ortho"
    definition-file: ${libgen.library.folder}"/library.txt"
    txt-header: ["A", "800", "LIBRARY", ""]
    export-directive: "EXPORT_EXCLUDE %s/%s %s"
  }
  resources {
    roads {
      source: "Resources/default scenery/1000 roads"
      checksum: 4030212506
      target: ${libgen.library.folder}"/Resources/1000_roads"
      exports: ["roads.net", "roads_EU.net"]
      duplication.ignore-files: [${libgen.resources.roads.source}"/library.txt", ${libgen.resources.roads.source}"/library.lib"]
    }
  }
  modifications {
    roads {
      uncomment {
        groups-regex: "(#\\s+Group:\\s+)(?<groupName>\\w+)"
        groups-enabled: ["GRPLocal", "GRPLocalOneWay", "GRPPrimary", "GRPPrimaryOneWay", "GRPSecondary", "GRPSecondaryOneWa", "GRPSingleLane", "GRPSingleLaneOneway", "GRP_PlugsPri", "GRP_PlugsSec", "GRP_PlugsLoc", "GRP_PlugsRural", "GRP_JuncComp_EU", "GRP_JuncPlugs_EU", "GRPCompJunctionsDrp", "GRP_TransitionBYTs", "GRP_Centers", "GRP_Corners", "GRP_Stubs", "GRP_DeadEnds", "GRP_Approaches"]
        target-files: [${libgen.resources.roads.target}"/roads.net", ${libgen.resources.roads.target}"/roads_EU.net"]
        lines-starting-with: ["QUAD", "TRI", "SEGMENT_DRAPED"]
      }
    }
  }
}

overlay-scanner {
  library-prefix: ${libgen.library.prefix}
  backup-folder: "Transparency4Ortho/Backups"
  earth-nav-data-folder: "Earth nav data"
  scenery-packs-file: "Custom Scenery/scenery_packs.ini"

  regex {
    scenery-pack-entry: "SCENERY_PACK\\s+(?<scenerypath>.+)"
    dsf-filename: "\\A[-+]\\d{2}[-+]\\d{3}[.]dsf\\Z"
  }
  detection {
    overlays {
      folder-names-regex: ["yOrtho4XP_.+", "simHeaven.+-network"]
      excluder-files: ["Transparency4Ortho.Overlay.Exclude", "library.txt", "Earth nav data/apt.dat"]
      includer-files: ["Transparency4Ortho.Overlay.Include"]
    }
    orthos {
      dds-filename-regex: "\\A\\d{5,6}_\\d{5,6}_.+[.]dds\\Z"
      folder-names-regex: ["zOrtho4XP_.+", "zPhotoXP_.+"]
      excluder-files: ["Transparency4Ortho.Ortho.Exclude", "library.txt", ${overlay-scanner.earth-nav-data-folder}"/apt.dat"]
      includer-files: ["Transparency4Ortho.Ortho.Include", "Ortho4XP.cfg"]
    }
  }
}

tiletransformer {
  replacements {
    patterns: ["(?<before>NETWORK_DEF\\s+)(?<replace>lib/g10)(?<after>/roads.net)", "(?<before>NETWORK_DEF\\s+)(?<replace>lib/g10)(?<after>/roads_EU.net)"]
  }
}
